h1. Make trisul core dump upon crash 

If you need to debug a trisul crash, a core dump is a valuable tool.  

h2. Request a checked build 

The trisul executable that comes with the RPM or DEB package is stripped of debugging symbols. You can request Unleash Networks for a checked build, with all symbols intact. We will give you a file called __trisul_checked__ built specifically for your platform.

Place the checked build in __/usr/local/bin__


h2. Core file  

Trisul is a setuid program. It starts up as root, but after completing privileged work, drops down to the user specified in the <SetUID> parameter in trisulConfig.xml. The default user is __trisul.trisul__.

h3. Enable core dumping of setuid programs 

Set the value of __/proc/sys/fs/suid_dumpable__ to __2__

pre.. 
[root@localhost ~]# cat /proc/sys/fs/suid_dumpable 
0
[root@localhost ~]# echo 2 >  /proc/sys/fs/suid_dumpable 
[root@localhost ~]# 
[root@localhost ~]# cat /proc/sys/fs/suid_dumpable 
2
[root@localhost ~]#



h3. Where is the core file ? 

By default The core file will be placed in __/tmp__ and will be called __core.xxxx__ where //xxxx// is the PID of the trisul process that crashed.  You can change this filename by modifying the __/etc/sysctl.conf__ file.

Add the following lines to __/etc/sysctl.conf__

pre.. 
# core file will be called core.trisul.2239
kernel.core_pattern=/tmp/core.%e.%p


p. Reload config 

pre.. 
[root@localhost ~]# sysctl -p
net.ipv4.ip_forward = 0
...
...
kernel.core_pattern = /tmp/core.%e.%p
[root@localhost ~]# 


h3. When it crashes 

Once Trisul crashes and you have located the core dump in /tmp, it is time to fire up gdb and determine the cause of the crash.

You must do this as root, because the saved core file is only readable by root.

pre.. 
gdb /usr/local/bin/trisul_checked  /tmp/core.trisul.3297
(gdb) bt
.. prints the stack...

p. You may then send the stack trace to us so we can help fix the cause of the crash.
